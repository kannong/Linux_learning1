ARM汇编指令笔记
默认小字节序
一、寄存器笔记
每个寄存器占4字节
R13：Stack Pointer——当前栈所指向的地址
R14: Link Register——返回地址保存的地方，用于保存函数地址，函数返回跳转到该地址
R15: Program Counter——程序计数器，用于记录当前程序所跳转到的内存地址（当前指令的地址+8，因为ARM系统流水线方式执行）
                    （当前执行A的指令，已经在对地址为A+4的指令进行译码，已经在读取地址A+8的指令）
R11: fp
R12: ip

R0 - R3：传参使用
R0常作为相互调用的函数之间的传参保存寄存器
R1-R3用于保存函数中的局部变量


二、ARM汇编中格式
左边一列：当前访问内存
中间一列：机器码指令
右边一列：汇编指令

三、常用汇编指令
1、LDR：读内存	
LDR  R0，[R1]
假设R1的值为x，读取地址x上的数据

2、STR：写内存命令
STR  R0，[R1]
假设R1的值为x，把R0的值放入地址x中

3、B跳转

4、MOV:赋值指令
MOV  R0，R1
把R1的值赋给R0

5、LDR  R0，=0x12345678  
R0 = 0x12345678
伪指令，它会被拆分为几条真正的RAM指令

6、add  r0，r1,#4:r0
加指令，r0 = r1 + 4

7、sub  r0，r1,#4:r0
减指令，r0 = r1 - 4

8、BL  bl xxx
跳转到xxx指令
并且把返回地址保存在lr寄存器中

9、ldm  
读内存，写入多个寄存器
ldmia    (ia表示先读后增)
ldmia  sp，(fp,ip,lr,pc)
高编号寄存器存放高地址内存值
sp无!表示sp修改后的值不存入内存中sp的值最终不修改

10、stm
把多个寄存器写入内存
stmdb   (db代表先减后存)
stmdb  sp!，(fp,ip,lr,pc)
高编号寄存器存在高地址内存中
sp!表示最后sp = 最终的、被修改的sp的值




